#version 430 core
layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
layout (binding = 0) uniform sampler2D r_current_color;
layout (rgba8, binding = 1) writeonly uniform image2D rw_hr_current_color;



///// Uniforms /////
layout (binding = 10, std140) uniform cb_t
{
    vec4 render_size;
    vec4 presentation_size;
    vec4 delta;
    vec2 jitter_offset;
    float depth_diff_threshold_sr;
    float color_diff_threshold_fg;
    float depth_diff_threshold_fg;
    float depth_scale;
    float depth_bias;
    float render_scale;
} cb;



void main()
{
    ivec2 pos_HR = ivec2(gl_GlobalInvocationID.xy);
    vec2 uv = (vec2(pos_HR) + vec2(0.5, 0.5)) * cb.presentation_size.zw;
    vec2 jitteredUV = uv + cb.jitter_offset * cb.render_size.zw;
    // Use texture sampler (bilinear)
    vec4 color = texture(r_current_color, jitteredUV);
    
    imageStore(rw_hr_current_color, pos_HR, color);
}
